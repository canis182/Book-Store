### registration user / create new user
POST http://localhost:3000/api/v1/users/registration
Content-Type: application/json

{
    "name": "Jhon",
    "surname": "Doe",
    "nickname": "",
    "age": 30,
    "password": "blabla",
    "email": "Jhon@someemail.com"
}

### Authorization User
POST http://localhost:3000/api/v1/users/authorization
Content-Type: application/json 

{
    "nickname": "Jhon",
    "password": "blabla"
}
### add img
POST http://localhost:3000/api/v1/users/single
Authorization: token 
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="img"; filename="1.png"
Content-Type: image/png
//the path to the photo on your machine
< ./someImg/1.png
------WebKitFormBoundary7MA4YWxkTrZu0gW--
### search book 
GET http://localhost:3000/api/v1/books/search?query=*BookNameOrAuthor*
Authorization: token 
### read book
GET http://localhost:3000/api/v1/books/read/*BookId*
Authorization: token 
### add comment 
POST http://localhost:3000/api/v1/books/comment/*BookId*
Content-Type: application/json
Authorization: token 

{
    "comment": "",
    "nickname": ""
}
### refresh token
GET http://localhost:3000/api/v1/token/refresh
Authorization: refresh 

//Admin command

### add book to db 
POST http://localhost:3000/api/v1/books/add
Content-Type: application/json
Authorization: token 

{
	"name": "It",
	"author": "King",
	"description": "Horror",
	"text": "Lorem ipsum tecto ex dolores?"
}

### change a book
POST http://localhost:3000/api/v1/books/change/*BookId*
Content-Type: application/json
Authorization: token 

{
	"author": "",
    "name" : ""
}
### get comments for user name
GET http://localhost:3000/api/v1/comments/searchuser?name=*UserName*
Authorization: token 

### delate all comment by username
DELETE http://localhost:3000/api/v1/comments/searchuser?name=*UserName*
Authorization: token 

### delete comment by comment id
DELETE http://localhost:3000/api/v1/comments/searchid?id=*commentId*
Authorization: token 
